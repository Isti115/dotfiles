# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

# font pango:DejaVu Sans Mono, FontAwesome 5 Free 10
font pango:FontAwesome 5 Free 10

### Variables
#
# Logo key. Use Mod1 for Alt.

# Modifiers:
set $ctl Ctrl
set $sft Shift
set $alt Mod1
set $met Mod3
set $win Mod4
set $hyp Mod5

# Home row direction keys, like vim
set $left  h
set $down  j
set $up    k
set $right l

# Paths
set $util ~/programming/utility-scripts

# Outputs
set $laptop  eDP-1
set $monitor HDMI-A-1

# Your preferred terminal emulator
# set $term termite
set $term alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
# set $menu wofi --show drun --allow-images # | wofi --show run # | dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

output $laptop  position 0    600
output $monitor position 1920 0

# output HEADLESS-1 position 2560 1440
# output HEADLESS-1 position 4480 600
# output HEADLESS-1 resolution 768x1024

# Blackout
bindsym $alt+Menu output * dpms off
bindsym $sft+Menu output * dpms on
# bindsym $ctl+Menu exec feh --zoom fill ~/Pictures/black.png
bindsym $ctl+Menu exec feh --fullscreen ~/Pictures/black.png

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' \
#               resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input 1133:16489:Logitech_MX_Master_2S {
  pointer_accel 0
}

input 2:14:ETPS/2_Elantech_Touchpad {
  tap enabled
  natural_scroll enabled
}

seat * hide_cursor 1500

input type:keyboard {
# input * {
  # xkb_layout us
  # xkb_layout hu
  # xkb_variant 101_qwerty_dot_nodead
  # xkb_layout us-f-hu
  # xkb_file ~/.config/xkb/test/custom.xkb
  xkb_file ~/.config/xkb/us-f-hu.xkb

  # repeat_delay 1000
  # repeat_rate 10
}

# input "1241:659:USB-HID_Keyboard" {
#   # xkb_layout us
#   xkb_file ~/.config/xkb/us-f-hu.xkb
# }

# input "1241:659:USB-HID_Keyboard_Consumer_Control" {
#   xkb_file ~/.config/xkb/us-f-hu.xkb
# }

# input "1241:659:USB-HID_Keyboard_System_Control" {
#   xkb_file ~/.config/xkb/us-f-hu.xkb
# }

# input "1241:659:USB-HID_Keyboard" {
#   xkb_file ~/.config/xkb/us-f-hu.xkb
# }


  # --- Lenovo L13 ---

  input 1267:51:Elan_Touchpad {
    tap enabled
    natural_scroll enabled
  }

  input type:keyboard {
    xkb_file ~/.config/xkb/Lenovo-L13.xkb
  }

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $win+Return exec $term
    bindsym $win+$alt+Return exec $term -e bash

    # Start an editor
    # bindsym $win+$sft+Return exec $term -e "pwsh -c ec"
    bindsym $win+$sft+Return exec $term -e "emacsclient --alternate-editor='' -t --create-frame $args"
    bindsym $win+$ctl+Return exec $term -e nvim; \
                             exec bash -c 'sleep 0.25; pkill --signal SIGWINCH nvim'

    # Kill focused window
    bindsym $win+Shift+q kill

    # Start your launcher
    # bindsym $win+d exec $menu

    bindsym $win+d exec wofi --show drun --allow-images
    bindsym $win+Shift+d exec wofi --show run

    bindsym $win+q exec $util/quick-commands.sh

    # Drag floating windows by holding down $win and left mouse button.
    # Resize them with right mouse button + $win.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $win normal

    # Reload the configuration file
    bindsym $win+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $win+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $win+$left  focus left
    bindsym $win+$down  focus down
    bindsym $win+$up    focus up
    bindsym $win+$right focus right
    # Or use $win+[up|down|left|right]
    # bindsym $win+Left  focus left
    # bindsym $win+Down  focus down
    # bindsym $win+Up    focus up
    # bindsym $win+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $win+Shift+$left  move left
    bindsym $win+Shift+$down  move down
    bindsym $win+Shift+$up    move up
    bindsym $win+Shift+$right move right
    # Ditto, with arrow keys
    # bindsym $win+Shift+Left  move left
    # bindsym $win+Shift+Down  move down
    # bindsym $win+Shift+Up    move up
    # bindsym $win+Shift+Right move right

    # Move the focused window with the same, but add Shift
    bindsym $win+$alt+$left  focus output left
    bindsym $win+$alt+$down  focus output down
    bindsym $win+$alt+$up    focus output up
    bindsym $win+$alt+$right focus output right
    # Ditto, with arrow keys
    # bindsym $win+$alt+Left  focus output left
    # bindsym $win+$alt+Down  focus output down
    # bindsym $win+$alt+Up    focus output up
    # bindsym $win+$alt+Right focus output right

    # Move the focused window with the same, but add Shift
    bindsym $win+Ctrl+$left  move workspace to output left
    bindsym $win+Ctrl+$down  move workspace to output down
    bindsym $win+Ctrl+$up    move workspace to output up
    bindsym $win+Ctrl+$right move workspace to output right
    # Ditto, with arrow keys
    # bindsym $win+Ctrl+Left  move workspace to output left
    # bindsym $win+Ctrl+Down  move workspace to output down
    # bindsym $win+Ctrl+Up    move workspace to output up
    # bindsym $win+Ctrl+Right move workspace to output right
#
# Workspaces:
#

  set $ws1  1
  set $ws2  2
  set $ws3  3
  set $ws4  4
  set $ws5  5
  set $ws6  6
  set $ws7  7
  set $ws8  8
  set $ws9  9
  set $ws10 10
  set $ws11 11
  set $ws12 12
  set $ws13 13
  set $ws14 14
  set $ws15 15
  set $ws16 16
  set $ws17 17
  set $ws18 18
  set $ws19 19
  set $ws20 20

  workspace $ws1 output $monitor
  workspace $ws2 output $laptop
  workspace $ws3 output $laptop
  workspace $ws4 output $monitor
  workspace $ws6 output $monitor
  workspace $ws7 output $laptop
  workspace $ws8 output $monitor

  # Switch to workspace
  bindsym $hyp+a workspace $ws1
  bindsym $hyp+s workspace $ws2
  bindsym $hyp+d workspace $ws3
  bindsym $hyp+f workspace $ws4
  bindsym $hyp+g workspace $ws5
  bindsym $hyp+z workspace $ws6
  bindsym $hyp+x workspace $ws7
  bindsym $hyp+c workspace $ws8
  bindsym $hyp+v workspace $ws9
  bindsym $hyp+b workspace $ws10
  bindsym $hyp+q workspace $ws11
  bindsym $hyp+w workspace $ws12
  bindsym $hyp+e workspace $ws13
  bindsym $hyp+r workspace $ws14
  bindsym $hyp+t workspace $ws15

  # Move focused container to workspace
  bindsym $hyp+$sft+a move container to workspace $ws1
  bindsym $hyp+$sft+s move container to workspace $ws2
  bindsym $hyp+$sft+d move container to workspace $ws3
  bindsym $hyp+$sft+f move container to workspace $ws4
  bindsym $hyp+$sft+g move container to workspace $ws5
  bindsym $hyp+$sft+z move container to workspace $ws6
  bindsym $hyp+$sft+x move container to workspace $ws7
  bindsym $hyp+$sft+c move container to workspace $ws8
  bindsym $hyp+$sft+v move container to workspace $ws9
  bindsym $hyp+$sft+b move container to workspace $ws10
  bindsym $hyp+$sft+q move container to workspace $ws11
  bindsym $hyp+$sft+w move container to workspace $ws12
  bindsym $hyp+$sft+e move container to workspace $ws13
  bindsym $hyp+$sft+r move container to workspace $ws14
  bindsym $hyp+$sft+t move container to workspace $ws15

  bindsym $hyp+Tab workspace back_and_forth

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $win+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $win+b splith
    bindsym $win+v splitv

    # Switch the current container between different layout styles
    bindsym $win+s layout stacking
    bindsym $win+w layout tabbed
    bindsym $win+e layout toggle split

    # Make the current focus fullscreen
    bindsym $win+f fullscreen
    bindsym --whole-window button9 fullscreen toggle

    # Toggle the current focus between tiling and floating mode
    bindsym $win+$sft+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $win+$alt+space focus mode_toggle

    # Move focus to the parent container
    # bindsym $win+a focus parent
    bindsym $win+Escape focus parent
    bindsym $win+Shift+Escape focus child

    gaps inner 5
    default_border pixel 5

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $win+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $win+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left  resize shrink width  10px
    bindsym $down  resize grow   height 10px
    bindsym $up    resize shrink height 10px
    bindsym $right resize grow   width  10px

    bindsym $sft+$left  resize shrink width  50px
    bindsym $sft+$down  resize grow   height 50px
    bindsym $sft+$up    resize shrink height 50px
    bindsym $sft+$right resize grow   width  50px

    bindsym $ctl+$left  resize shrink width  1px
    bindsym $ctl+$down  resize grow   height 1px
    bindsym $ctl+$up    resize shrink height 1px
    bindsym $ctl+$right resize grow   width  1px

    # Ditto, with arrow keys
    # bindsym Left  resize shrink width  10px
    # bindsym Down  resize grow   height 10px
    # bindsym Up    resize shrink height 10px
    # bindsym Right resize grow   width  10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $win+r mode "resize"

##############
# MOUSE MODE #
##############

# {{{

  mode "mouse" {

    set $speed_precise 1
    set $speed_slow    10
    set $speed_normal  50
    set $speed_quick   100
    set $speed_fast    250

    set $key_precise $sft+$alt
    set $key_slow    $sft
    # set $key_normal
    set $key_quick   $ctl
    set $key_fast    $ctl+alt

    # Movement

    bindsym $key_precise+h seat * cursor move -$speed_precise  0
    bindsym $key_precise+j seat * cursor move  0  $speed_precise
    bindsym $key_precise+k seat * cursor move  0 -$speed_precise
    bindsym $key_precise+l seat * cursor move  $speed_precise  0

    bindsym $key_slow+h seat * cursor move -$speed_slow  0
    bindsym $key_slow+j seat * cursor move  0  $speed_slow
    bindsym $key_slow+k seat * cursor move  0 -$speed_slow
    bindsym $key_slow+l seat * cursor move  $speed_slow  0

    bindsym h seat * cursor move -$speed_normal  0
    bindsym j seat * cursor move  0  $speed_normal
    bindsym k seat * cursor move  0 -$speed_normal
    bindsym l seat * cursor move  $speed_normal  0

    bindsym $key_quick+h seat * cursor move -$speed_quick  0
    bindsym $key_quick+j seat * cursor move  0  $speed_quick
    bindsym $key_quick+k seat * cursor move  0 -$speed_quick
    bindsym $key_quick+l seat * cursor move  $speed_quick  0

    bindsym $key_fast+h seat * cursor move -$speed_fast  0
    bindsym $key_fast+j seat * cursor move  0  $speed_fast
    bindsym $key_fast+k seat * cursor move  0 -$speed_fast
    bindsym $key_fast+l seat * cursor move  $speed_fast  0

    # Buttons

    bindsym s seat * cursor press button1
    bindsym --release s seat * cursor release button1
    # bindsym $sft+s seat * cursor press button1

    bindsym d seat * cursor press button2
    bindsym --release d seat * cursor release button2

    bindsym f seat * cursor press button3
    bindsym --release f seat * cursor release button3

    bindsym e seat * cursor press button4
    # bindsym --release e seat * cursor release button4

    bindsym c seat * cursor press button5
    # bindsym --release c seat * cursor release button5

    # return to normal keybindings -- IMPORTANT!!

    bindsym Escape mode "default"; seat * hide_cursor 1500
  }

  # bindsym $win+Mod1+Shift+m mode "mouse"
  bindsym $win+m mode "mouse"; seat * hide_cursor 0

# }}}

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.

exec_always pkill -f mediaplayer.py --signal 9

bar {
    # position top

    # font pango:DejaVu Sans Mono, FontAwesome 5 Free 10

    swaybar_command waybar

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    # status_command while date +'%Y-%m-%d %l:%M:%S %p'; do sleep 1; done
    # status_command i3blocks

    # colors {
    #     statusline #ffffff
    #     background #323232
    #     inactive_workspace #32323200 #32323200 #5c5c5c
    # }
}

# Own stuff

# Audio / Sound / Volume {{{
    bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle && $volume-xob
    bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5dB
    bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5dB

    bindsym Undo exec pactl set-sink-volume @DEFAULT_SINK@ -1%
    bindsym Redo exec pactl set-sink-volume @DEFAULT_SINK@ +1%

    bindsym --whole-window button8 nop
    bindsym --whole-window button8+button5 exec pactl set-sink-volume @DEFAULT_SINK@ -3dB
    bindsym --whole-window button8+button4 exec pactl set-sink-volume @DEFAULT_SINK@ +3dB

    bindsym XF86AudioPlay exec playerctl play-pause
    bindsym $sft+Undo exec playerctl previous
    bindsym $sft+Redo exec playerctl next

    # bindsym $sft+XF86AudioLowerVolume exec ~/programming/utility-scripts/set-default-sink.pl "HDA Intel PCH"
    # bindsym $sft+XF86AudioRaiseVolume exec ~/programming/utility-scripts/set-default-sink.pl "HDA Intel HDMI"

    # bindsym $ctl+XF86AudioLowerVolume exec ~/programming/utility-scripts/move-sink-inputs.pl "HDA Intel PCH"
    # bindsym $ctl+XF86AudioRaiseVolume exec ~/programming/utility-scripts/move-sink-inputs.pl "HDA Intel HDMI"

    set $jack "alsa_output.pci-0000_00_1b.0.analog-stereo"
    set $hdmi "alsa_output.pci-0000_00_03.0.hdmi-stereo"

    # bindsym $sft+XF86AudioLowerVolume exec pacmd set-default-sink $jack
    # bindsym $sft+XF86AudioRaiseVolume exec pacmd set-default-sink $hdmi

    # bindsym $ctl+XF86AudioLowerVolume exec ~/programming/utility-scripts/move-sink-inputs.pl $jack
    # bindsym $ctl+XF86AudioRaiseVolume exec ~/programming/utility-scripts/move-sink-inputs.pl $hdmi

    # bindsym $ctl+$sft+XF86AudioLowerVolume \
    #         exec ~/programming/utility-scripts/move-sink-inputs.pl $jack; \
    #         exec pacmd set-default-sink $jack
    # bindsym $ctl+$sft+XF86AudioRaiseVolume \
    #         exec ~/programming/utility-scripts/move-sink-inputs.pl $hdmi; \
    #         exec pacmd set-default-sink $hdmi

    bindsym $sft+XF86AudioLowerVolume \
            exec ~/programming/utility-scripts/move-sink-inputs.pl $jack; \
            exec pacmd set-default-sink $jack
    bindsym $sft+XF86AudioRaiseVolume \
            exec ~/programming/utility-scripts/move-sink-inputs.pl $hdmi; \
            exec pacmd set-default-sink $hdmi
# }}}

# Backlight {{{
    bindsym XF86Back exec light -U 10
    bindsym XF86Forward exec light -A 10

    bindsym $sft+XF86Back exec light -U 5
    bindsym $sft+XF86Forward exec light -A 5

    bindsym $ctl+XF86Back exec light -U 1
    bindsym $ctl+XF86Forward exec light -A 1

    bindsym $alt+XF86Back exec light -U 0.1
    bindsym $alt+XF86Forward exec light -A 0.1

    bindsym XF86MonBrightnessDown exec light -U 10
    bindsym XF86MonBrightnessUp exec light -A 10
# }}}

# Opacity {{{
    bindsym XF86AudioPrev opacity minus 0.2
    bindsym XF86AudioStop opacity set 1.0
    bindsym XF86AudioNext opacity plus 0.2

    bindsym $sft+XF86AudioPrev opacity minus 0.1
    bindsym $sft+XF86AudioStop opacity set 0.75
    bindsym $sft+XF86AudioNext opacity plus 0.1

    bindsym $ctl+XF86AudioPrev opacity minus 0.05
    bindsym $ctl+XF86AudioStop opacity set 0.5
    bindsym $ctl+XF86AudioNext opacity plus 0.05

    bindsym $alt+XF86AudioPrev opacity minus 0.01
    bindsym $alt+XF86AudioStop opacity set 0.25
    bindsym $alt+XF86AudioNext opacity plus 0.01

    bindsym --whole-window $win+button5 opacity minus 0.025
    bindsym --whole-window $win+button2 opacity set 1.0
    bindsym --whole-window $win+button4 opacity plus 0.025
# }}}

# Screenshot {{{
    bindsym Print           exec grimshot save screen
    bindsym $ctl+Print      exec grimshot copy screen
    bindsym $sft+Print      exec grimshot save area
    bindsym $ctl+$sft+Print exec grimshot copy area
    bindsym $alt+Print      exec grimshot save win
    bindsym $ctl+$alt+Print exec grimshot copy win

    bindsym $win+Print      exec $util/swappy-area.sh
# }}}

# Emoji {{{
    # bindsym $win+period exec "splatmoji copy"
    bindsym $win+period exec $util/wofi-emoji.sh
# }}}

# Task Managers {{{
    bindsym Ctrl+Shift+Escape exec $term -e htop
# }}}

# File Managers {{{
    bindsym $win+a exec $term -e ranger
    bindsym $win+Shift+a exec thunar
# }}}

# Clipboard {{{
    bindsym $win+c exec clipman pick -t wofi
    bindsym $win+$ctl+c exec clipman clear -t wofi
    exec wl-paste -t text --watch clipman store --max-items=100
# }}}

# Notifications

bindsym $ctl+$win+space exec makoctl dismiss
bindsym $ctl+$win+$alt+space exec makoctl dismiss --all
# exec mako

# Assignments

# assign [class="vlc"] $ws2
assign [class="discord"] $ws8

# === Firefox Windows === {{{

  # assign [name="[Read/Watch]"] $ws1
  # assign [name="[Music]"] $ws2
  # assign [name="[ORSI/Agda]"] $ws3
  # assign [name="[CodeJam]"] $ws5
  # assign [name="[Minecraft]"] $ws6
  # assign [name="[Arch]"] $ws7
  # assign [name="[Communication/Organization]"] $ws8

  bindsym $win+shift+f \
    [class="firefox"] move workspace $ws10; \
    [title="Read/Watch"] move workspace $ws1; \
    [title="Music"] move workspace $ws2; \
    [title="ORSI/Agda"] move workspace $ws3; \
    [title="Flockwave"] move workspace $ws3; \
    [title="CodeJam"] move workspace $ws5; \
    [title="Wedding"] move workspace $ws6; \
    [title="Minecraft"] move workspace $ws6; \
    [title="Arch"] move workspace $ws7; \
    [title="Communication/Organization"] move workspace $ws8

  # bindsym $win+$shift+c firefox-developer-edition -ssb "calendar.google.com"

  for_window [title="calendar.google.com"] \
    floating enable, \
    resize set 1280 720, \
    move position 640 350, \
    opacity set 0.9

# }}}

# Exec

# bindsym $win+space exec flash_window
# exec flashfocus
exec xrdb -load ~/.Xresources

# End

bindsym KP_Insert nop # disable to avoid accidental presses
# bindsym --whole-window button9+button1 exec $term

# include /etc/sway/config.d/*
