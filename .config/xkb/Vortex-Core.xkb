xkb_keymap {
  xkb_keycodes {
    // --- Center (alphabet, symbol) keys / Base layer ---
    include "alphabet-letters"

    <SemiColon> = 47;
    <Comma> = 59; <Period> = 60; <Slash> = 61;

    // --- Center (alphabet, symbol) keys / Fn layer ---
    include "function-row"
    include "number-row"

    <Grave> = 49; <Apostrophe> = 48; <Minus> = 20; <Equal> = 21;
    <BFn> = 198;
    <BracketLeft> = 34; <BracketRight> = 35; <Backslash> = 51;

    // --- Other (side, bottom) keys / Base layer ---
    <Escape>      = 9;                     <BackSpace> = 22; <Delete> = 119;
    <Tab>         = 23;                                      <Return> =  36;
    <LeftShift>   = 50;                                  <RightShift> =  62;
    <LeftControl> = 37;                                <RightControl> = 105;
        <LeftAlt> = 64;                                <RightWin> = 134;
            <LeftWin> = 133;                       <RightAlt> = 108;
                <Pn> = 77; <LeftSpace> = 65; <RightSpace> = 135;

    // --- Other (side, bottom) keys / Fn layer ---
    <EscapeFn>      = 90;                  <BackSpaceFn> = 87; <DeleteFn> =  88;
    <TabFn>         = 66;                                      <ReturnFn> = 104;
    <LeftShiftFn>   = 89;                                  <RightShiftFn> =  84;
    <LeftControlFn> = 85;                              <RightControlFn> = 86;
        <LeftAltFn> = 79;                              <RightWinFn> = 91;
            <LeftWinFn> = 80;                       <RightAltFn> = 82;
              <PnFn> = 81; <LeftSpaceFn> = 106; <RightSpaceFn> = 63;
  };

  xkb_types {
    include "modifier-type"
    include "simple-type"
    include "shiftable-type"

    type "Custom" {
      modifiers       = Shift+Mod5+Lock;
      map[None]       = Level1;
      map[Shift]      = Level2;
      map[Mod5]       = Level3;
      map[Shift+Mod5] = Level4;
      map[Lock]       = Level5;
      map[Shift+Lock] = Level5;
      // preserve[Shift+Lock] = Shift;
    };
  };

  xkb_compat {
    include "forward-modifiers"
  };

  xkb_symbols {
    name[Group1] = "Vortex Core";


    // --- Modifiers ---
    key.type = "Modifier";

    key <LeftShift>   { [ Shift_L    ] };
    key <LeftControl> { [ Alt_L      ] };
    key <LeftAlt>     { [ Control_L  ] };
    key <LeftWin>     { [ Super_L    ] };
    key <Pn>          { [ Hyper_L    ] };
    key <RightSpace>  { [ Shift_Lock ] };
    key <RightShift>  { [ Shift_R    ] };

    key <LeftShiftFn>   { [ Shift_L    ] };
    key <LeftControlFn> { [ Alt_L      ] };
    key <LeftAltFn>     { [ Control_L  ] };
    key <LeftWinFn>     { [ Super_L    ] };
    key <PnFn>          { [ Hyper_L    ] };
    key <RightSpaceFn>  { [ Shift_Lock ] };
    key <RightShiftFn>  { [ Shift_R    ] };

    modifier_map Control { <LeftAlt>,                   <LeftAltFn>                     };
    modifier_map Lock    { <RightSpace>,                <RightSpaceFn>                  };
    modifier_map Shift   { <LeftShift>,   <RightShift>, <LeftShiftFn>,   <RightShiftFn> };
    modifier_map Mod1    { <LeftControl>,               <LeftControlFn>                 };
    // modifier_map Mod2 {                                                              };
    // modifier_map Mod3 {                                                              };
    modifier_map Mod4    { <LeftWin>,                   <LeftWinFn>                     };
    modifier_map Mod5    { <Pn>,                        <PnFn>                          };

    include "modifier-symbols"


    // --- Simple keys ---
    key.type = "Simple";

    key <Escape>    { [ Escape    ] };
    key <BackSpace> { [ BackSpace ] };
    key <Delete>    { [ Delete    ] };
    key <Tab>       { [ Tab       ] };
    key <Return>    { [ Return    ] };
    key <LeftSpace> { [ space     ] };

    key <EscapeFn>    { [ Escape    ] };
    key <BackSpaceFn> { [ BackSpace ] };
    key <DeleteFn>    { [ Delete    ] };
    key <TabFn>       { [ Tab       ] };
    key <ReturnFn>    { [ Return    ] };
    key <LeftSpaceFn> { [ space     ] };

    key <RightAlt>     { [ XF86AudioLowerVolume ] };
    key <RightWin>     { [ XF86AudioMute        ] };
    key <RightControl> { [ XF86AudioRaiseVolume ] };

    key <RightAltFn>     { [ XF86MonBrightnessDown ] };
    key <RightWinFn>     { [ XF86AudioPlay         ] };
    key <RightControlFn> { [ XF86MonBrightnessUp   ] };

    include "function-row"


    // --- Alphabet, numbers, symbols, movement ---
    key.type = "Custom";

    key <Q> {[ q, Q                                    ]};
    key <W> {[ w, W                                    ]};
    key <E> {[ e, E                                    ]};
    key <R> {[ r, R                                    ]};
    key <T> {[ t, T                                    ]};
    key <Y> {[ y, Y                                    ]};
    key <U> {[ u, U, odoubleacute, Odoubleacute, Home  ]};
    key <I> {[ i, I, oacute,       Oacute,       Up    ]};
    key <O> {[ o, O, uacute,       Uacute,       End   ]};
    key <P> {[ p, P, udoubleacute, Udoubleacute, Print ]};

    key <A> {[ a, A                                    ]};
    key <S> {[ s, S                                    ]};
    key <D> {[ d, D                                    ]};
    key <F> {[ f, F                                    ]};
    key <G> {[ g, G                                    ]};
    key <H> {[ h, H                                    ]};
    key <J> {[ j, J, odiaeresis,   Odiaeresis,   Left  ]};
    key <K> {[ k, K, eacute,       Eacute,       Down  ]};
    key <L> {[ l, L, aacute,       Aacute,       Right ]};

    key <Z> {[ z, Z                                    ]};
    key <X> {[ x, X                                    ]};
    key <C> {[ c, C                                    ]};
    key <V> {[ v, V                                    ]};
    key <B> {[ b, B, NoSymbol,     NoSymbol            ]};
    key <N> {[ n, N, NoSymbol,     NoSymbol,     Prior ]};
    key <M> {[ m, M, iacute,       Iacute,       Next  ]};

    key <SemiColon> { [ semicolon, colon,    udiaeresis, Udiaeresis ] };
    key <Comma>     { [ comma,     less     ] };
    key <Period>    { [ period,    greater  ] };
    key <Slash>     { [ slash,     question, NoSymbol, NoSymbol, Insert ] };

    // -- Fn layer --

    include "number-row"

    key <Grave>            { [ grave,        asciitilde ] };
    key <Apostrophe>       { [ apostrophe,   quotedbl   ] };
    key <Minus>            { [ minus,        underscore ] };
    key <Equal>            { [ equal,        plus       ] };
    key <BracketLeft>      { [ bracketleft,  braceleft  ] };
    key <BracketRight>     { [ bracketright, braceright ] };
    key <Backslash>        { [ backslash,    bar        ] };
  };

  xkb_geometry { };
};
